"""Change answer column to UnicodeText

Revision ID: 63130b993f0e
Revises: 7283f4b6636c
Create Date: 2025-07-29 10:26:38.824317

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = '63130b993f0e'
down_revision: Union[str, Sequence[str], None] = '7283f4b6636c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    bind = op.get_bind()
    inspector = inspect(bind)

    # Conditionally drop the table only if it exists
    if 'message_store' in inspector.get_table_names():
        op.drop_table('message_store')
    # ### commands auto generated by Alembic - please adjust! ###
  
    op.alter_column('messages', 'answer',
               existing_type=sa.NVARCHAR(length=1000, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.UnicodeText(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('messages', 'answer',
               existing_type=sa.UnicodeText(),
               type_=sa.NVARCHAR(length=1000, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
    op.create_table('message_store',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__message___3213E83FDA02919F'))
    )
    # ### end Alembic commands ###
